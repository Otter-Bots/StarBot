import { ApplyOptions } from '@sapphire/decorators';
import { Listener, ListenerOptions } from '@sapphire/framework';
import type { MessageReaction, TextChannel } from 'discord.js';
@ApplyOptions<ListenerOptions>({
  event: "messageReactionAdd"
})
export class UserEvent extends Listener {
  public async run(reaction: MessageReaction) {
  	if (reaction.partial) {
      // If the message this reaction belongs to was removed, the fetching might result in an API error which should be handled
      try {
        await reaction.fetch();
      } catch (error) {
        console.error('Something went wrong when fetching the message:', error);
        // Return as `reaction.message.author` may be undefined/null
        return;
      }
    }
    const tracked = await this.container.db.table(`tracked_${reaction.message.guildId}`);
    const config = await this.container.db.table(`config_${reaction.message.guildId}`);
    const trackedAll = await tracked.all()
    if (reaction.emoji.name == "‚≠ê") {
      if (trackedAll.includes(`_${reaction.message.id}`)) {
        const { client } = this.container
        const msgId = await tracked.get(`_${reaction.message.id}`);
        const channelId = await config.get("channel");
        const channel = client.channels.cache.get(channelId) as TextChannel;
        const message = await channel?.messages.fetch(msgId);
        const embed = this.container.starboard.utils.embed(`${reaction.message.content}`, `${reaction.count}`, config);
        message.edit({embeds: [embed]})
        console.log("Test!")
      } else {
    if (reaction.count <= await config.get("stars")) {
      if (await config.get("channelId")  == null) {
        reaction.message.channel.send('ERROR: starboard channel not set!,\n set it using `/config channel <channel>`')
      } else {
      const embed = this.container.starboard.utils.embed(`${reaction.message.content}`, `${reaction.count}`, config);
      const channelId = await config.get("channelId")
      const channel = this.container.client.channels.cache.get(channelId) as TextChannel;
      const msg = await channel.send({ embeds: [embed]})
      await tracked.set(`_${reaction.message.id}`, msg.id)
      }
    }
    }
  }
  }
}
